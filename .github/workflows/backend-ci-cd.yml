# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Backend CI/CD with Jest and Cloud Run
on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"
      - "!*.md"

env:
  PROJECT_ID: ${{secrets.GCP_PROJECT_ID}}
  SERVICE: ${{secrets.GCP_APP_NAME}}
  REGION: asia-southeast1

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "backend"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "yarn"
          cache-dependency-path: "**/yarn.lock"

      - name: Install project dependencies
        run: yarn install --prefer-offline --frozen-lockfile

      - name: Run Jest
        run: yarn test
        env:
          OTOT_B_MONGO_URI: ${{secrets.OTOT_B_MONGO_URI}}

  deploy:
    needs: test
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "backend"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{secrets.GCP_CREDENTIALS}}"

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorise Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}

      - name: Deploy Backend to Cloud Run
        run: |-
          gcloud run deploy ${{ env.SERVICE }} \
            --region ${{ env.REGION }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }} \
            --platform "managed" \
            --allow-unauthenticated \
            --update-secrets OTOT_B_MONGO_PORT=OTOT_B_MONGO_PORT:latest \
            --update-secrets OTOT_B_MONGO_URI=OTOT_B_MONGO_URI:latest \
            --update-secrets OTOT_B_SOURCE=OTOT_B_SOURCE:latest
